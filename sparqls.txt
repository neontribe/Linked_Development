This is a work in progress to help map search routes to eldis sparql queries


ld_api_count_count               GET|HEAD|OPTIONS ANY    ANY  /count/{obj}/{category}

where:
{obj} = Documents,Organisations,Items    
<http://purl.org/ontology/bibo/Article>, <http://dbpedia.org/ontology/Organisation>, ???
{category} = Theme, Region, Keyword, Country

          
/count/Documents
select  count(distinct ?article) where {?article a <http://purl.org/ontology/bibo/Article>}
/count/Organisations
select  count(distinct ?organisation) where {?organisation a <http://dbpedia.org/ontology/Organisation>}

/count/Documents/Region
select distinct ?region ?regionlabel count(distinct ?article) where {
                               ?article a <http://purl.org/ontology/bibo/Article> .
                               ?article <http://purl.org/dc/terms/coverage> ?region .
                               OPTIONAL {?r <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?c . 
                                         FILTER ( ?r = ?region ) . 
                                        }
                               FILTER ( !BOUND(?r) ) .
                               ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionlabel .
                              }
 
/count/Documents/Country
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct ?countrycode ?countrylabel count(distinct ?article) 
                          where {
                                ?country <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?countrycode .
                                ?publisher a <http://dbpedia.org/ontology/Organisation> .
                                ?article DCTERMS:publisher ?publisher .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                ?article <http://purl.org/dc/terms/coverage> ?country .
                                ?country <http://www.w3.org/2000/01/rdf-schema#label> ?countrylabel .
                                }


/count/Documents/Themes
select distinct ?theme ?themelabel count(distinct ?article) 
                         where {?b <http://purl.org/dc/terms/subject> ?theme . 
                                ?theme <http://www.w3.org/2000/01/rdf-schema#label> ?themelabel .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                ?article <http://purl.org/dc/terms/subject> ?theme .
                                }

/count/Organisation/Region
this will count the number of organisations that have published work about a region
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct ?region ?regionlabel count(distinct ?publisher)
                where { ?article <http://purl.org/dc/terms/coverage> ?region .
                        OPTIONAL {?r <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?c . 
                                FILTER ( ?r = ?region ) . 
                                }
                        FILTER ( !BOUND(?r) ) .
                        ?region <http://www.w3.org/2000/01/rdf-schema#label> ?regionlabel .
                        ?publisher a <http://dbpedia.org/ontology/Organisation> .
                        ?article DCTERMS:publisher ?publisher .
                        ?article a <http://purl.org/ontology/bibo/Article> .
                        }

/count/Organisation/Country
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct ?country ?countrycode count(distinct ?publisher) 
                        where {
                                ?country <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?countrycode .
                                ?publisher a <http://dbpedia.org/ontology/Organisation> .
                                ?article DCTERMS:publisher ?publisher .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                ?article <http://purl.org/dc/terms/coverage> ?country .
                                }
                                
organisations with publication a publication assigned to no country -- not all that helpful
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct count(distinct ?publisher) where {
                                ?publisher a <http://dbpedia.org/ontology/Organisation> .
                                ?article DCTERMS:publisher ?publisher .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                OPTIONAL {?article <http://purl.org/dc/terms/coverage> ?c .
                                          FILTER (?c = ?country) .
                                         }
                                FILTER (!BOUND(?c)) .
                                }
I think best way is to query how many unique Organisation, and how many have a publication in at least one country then take the difference. two queries 
Note this includes organisations that have works in regions but not a country
select  count(distinct ?organisation) where {?organisation a <http://dbpedia.org/ontology/Organisation>}
and
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct count(distinct ?publisher) 
                        where {
                                ?country <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?countrycode .
                                ?publisher a <http://dbpedia.org/ontology/Organisation> .
                                ?article DCTERMS:publisher ?publisher .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                ?article <http://purl.org/dc/terms/coverage> ?country .
                                }



/count/Organisation/Themes
prefix DCTERMS: <http://purl.org/dc/terms/> 
select distinct ?theme ?themelabel count(distinct ?publisher) 
                        where {?theme <http://www.w3.org/2000/01/rdf-schema#label> ?themelabel .
                                ?article a <http://purl.org/ontology/bibo/Article> .
                                ?article <http://purl.org/dc/terms/subject> ?theme .
                                ?article DCTERMS:publisher ?publisher .
                                ?publisher a <http://dbpedia.org/ontology/Organisation> .
                                }



ld_api_get_get                   GET|HEAD|OPTIONS ANY    ANY  /get/{obj}/{parameter}

/get/assets/<ID>
this is getting a document http://linked-development.org/eldis/output/<ID>/
select distinct  ?a ?b
                        where {
                                <http://linked-development.org/eldis/output/A65066/> ?a ?b .
                                }

Or, using construct:
# Note - this version of the query is not currently working on Virtuoso 6.1.3 - probably due to the bug reported here: 

  PREFIX dcterms: <http://purl.org/dc/terms/>
  PREFIX bibo: <http://purl.org/ontology/bibo/>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX fao: <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/>
  
  CONSTRUCT {
      ?resource a bibo:Article.
      ?resource dcterms:title ?title.
      ?resource dcterms:abstract ?abstract.
      
      ?resource dcterms:creator ?creator.
      
      ?resource dcterms:subject ?subject.
      ?subject rdfs:label ?subjectTitle.
      ?subject dcterms:identifier ?subjectID.
      
      # Term relationships
      ?subject skos:broader ?subjectParent.
      ?subjectParent rdfs:label ?subjectParentLabel.
      ?subjectParent dcterms:identifier ?subjectParentID.
  
      ?resource dcterms:coverage ?coverage.
      ?coverage rdfs:label ?coverageTitle.
      ?resource dcterms:language ?language.
      ?resource dcterms:identifier ?identifier.
      ?resource rdfs:seeAlso ?document.
      ?resource dcterms:date ?date.
      ?resource dcterms:publisher ?publisher.
      ?publisher foaf:name ?publisherName.
  }

    WHERE {
      ?resource a bibo:Article.
      ?resource dcterms:title ?title.
      OPTIONAL { ?resource dcterms:abstract ?abstract. }
      
      # Creators
      # Handle cases where Creator is directly attached (Eldis), or through a blank node (R4D)
      OPTIONAL { 
           { 
           ?resource dcterms:creator ?creator. 
           } UNION { 
           ?resource dcterms:creator ?creatorURI. 
           ?creatorURI foaf:name ?creator.
           }
       FILTER(isLiteral(?creator))
      }
      
      # Subjects
      OPTIONAL { 
          ?resource dcterms:subject ?subject.
          ?subject rdfs:label ?subjectTitle. 
          OPTIONAL {
              ?subject dcterms:identifier ?subjectID.
          }
          OPTIONAL {
              ?subject skos:broader ?subjectParent
              # Uncomment out the line below to search the full category tree. 
              # OPTION (transitive, t_max(4), t_in(?subject), t_out(?subjectParent), t_step("step_no") as ?level)
              .
              ?subjectParent rdfs:label ?subjectParentLabel.
              ?subjectParent dcterms:identifier ?subjectParentID.
          }
      }
          
      # Coverage
      OPTIONAL { 
        ?resource dcterms:coverage ?coverage.
        # Handle for different ways in which coverage may be labelled. 
        { 
         ?coverage rdfs:label ?coverageTitle.
        } UNION {
         ?coverage fao:nameList ?coverageTitle.
         FILTER(lang(?coverageTitle) = 'en' || lang(?coverageTitle) = "")
        }
      }
      
      # Language
      OPTIONAL { ?resource dcterms:language ?language. }
      
      # Identifiers
      OPTIONAL { ?resource dcterms:identifier ?identifier. }
      
      # SeeAlso
      OPTIONAL { ?resource rdfs:seeAlso ?document. }
      
      # Date
      OPTIONAL { ?resource dcterms:date ?date.}
      
      # Publisher Information
      OPTIONAL {
          ?resource dcterms:publisher ?publisher.
          OPTIONAL { ?publisher foaf:name ?publisherName. }
      }
      
      # URI to the document
      OPTIONAL {
          ?resource bibo:uri ?uri.
      }
      
      FILTER(?resource = <http://linked-development.org/eldis/output/__ID__/>)
  }



/get/countries/<ID>
this is getting country http://linked-development.org/eldis/countries/<ID>/
select distinct  ?a ?b
                        where {
                                <http://linked-development.org/eldis/countries/A1018/> <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/codeISO2> ?countrycode .
                                <http://linked-development.org/eldis/countries/A1018/> ?a ?b .
                                }

/get/themes/<ID>
this is getting theme http://linked-development.org/eldis/themes/<ID>/
select distinct  ?a ?b
                        where {<http://linked-development.org/eldis/themes/C1310/> ?a ?b .
                                }

get/organsiation/<ID>
this is getting an organisation http://linked-development.org/eldis/organisation/<ID>/
select ?a ?b 
                        where {<http://linked-development.org/eldis/organisation/A64953/> ?a ?b .
                                }

get/region/<ID>
this is getting http://linked-development.org/eldis/regions/<ID>/
select ?a ?b 
                        where {<http://linked-development.org/eldis/regions/C30/> ?a ?b .
                                }






ld_api_get_getall                GET|HEAD|OPTIONS ANY    ANY  /get_all/{parameter}

get_all/documents
Note server may need longer time out for these.
limit/offset is important for this, note each object has around 14 lines each
select distinct ?article ?a ?b 
                        where {
                            ?article a <http://purl.org/ontology/bibo/Article> .
                            ?article ?a ?b .
                        }
ORDER BY ?article  limit 100 offset 100
maybe this would be better like this but i think not, duplicates are and issue, and performance. leaving for reference only
select distinct ?article ?also ?dcidentifier ?dctype ?dctitle ?dcdate ?dcabstract ?dccreator ?dccoverage ?dcpublisher  ?dclanguage ?theme
                        where {
                            ?article a <http://purl.org/ontology/bibo/Article> .
                            ?article <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?also .
                            ?article <http://purl.org/dc/terms/identifier> ?dcidentifier .
                            ?article <http://purl.org/dc/terms/type> ?dctype .
                            ?article <http://purl.org/dc/terms/title> ?dctitle  .
                            ?article <http://purl.org/dc/terms/date> ?dcdate .
                            ?article <http://purl.org/dc/terms/abstract> ?dcabstract .
                            ?article <http://purl.org/dc/terms/creator> ?dccreator .
                            ?article <http://purl.org/dc/terms/coverage> ?dccoverage .
                            ?article <http://purl.org/dc/terms/publisher> ?dcpublisher .
                            ?article <http://purl.org/dc/terms/language> ?dclanguage .
                            ?article <http://purl.org/dc/terms/subject> ?theme .
                            }
limit 100 offset 100

/get_all/themes
selects all used themes, don't know how to find any others, if any currently exist.

select distinct ?theme ?a ?b 
                        where {?article <http://purl.org/dc/terms/subject> ?theme .
                                ?theme ?a ?b .
                                }
order by ?theme 

/get_children/themes/<ID>
gets all documents in a theme
select distinct ?article ?a ?b 
                        where {?article <http://purl.org/dc/terms/subject> <http://linked-development.org/eldis/themes/<ID>/> .
                                ?article ?a ?b .
                                }



ld_api_get_getchildren           GET|HEAD|OPTIONS ANY    ANY  /get_children/{obj}/{parameter}
ld_api_get_fieldlist             GET|HEAD|OPTIONS ANY    ANY  /fieldlist
ld_api_search_searchwithobject   GET|HEAD|OPTIONS ANY    ANY  /search/{obj}
ld_api_search_searchwithobject_1 GET|HEAD|OPTIONS ANY    ANY  /search/{obj}/{param}




/search/document/
Searches for resources. Note that this may need more OPTIONAL clauses added to handle for where certain fields are not present...

    PREFIX dcterms: <http://purl.org/dc/terms/>
    PREFIX bibo:    <http://purl.org/ontology/bibo/>
    SELECT * WHERE {
        ?resource a bibo:Article.
        ?resource dcterms:title ?title.
        ?resource dcterms:abstract ?abstract.
        ?resource dcterms:creator ?creator.
        ?resource dcterms:subject ?subject.
        ?subject rdfs:label ?subjectTitle.
        ?resource dcterms:coverage ?coverage.
        ?coverage rdfs:label ?coverageTitle.
        ?resource dcterms:language ?language.
        ?resource dcterms:identifier ?identifier.
        ?resource rdfs:seeAlso ?document.
        ?resource dcterms:date ?date. 
        ?resource dcterms:publisher ?publisher.
    }
    limit 10



Alternatively, by using a construct query we can get a graph to work with.

PREFIX dcterms: <http://purl.org/dc/terms/>
   PREFIX bibo:    <http://purl.org/ontology/bibo/>
   CONSTRUCT {
       ?resource a bibo:Article.
       ?resource dcterms:title ?title.
       ?resource dcterms:abstract ?abstract.
       ?resource dcterms:creator ?creator.
       ?resource dcterms:subject ?subject.
       ?subject rdfs:label ?subjectTitle.
       ?resource dcterms:coverage ?coverage.
       ?coverage rdfs:label ?coverageTitle.
       ?resource dcterms:language ?language.
       ?resource dcterms:identifier ?identifier.
       ?resource rdfs:seeAlso ?document.
       ?resource dcterms:date ?date. 
       ?resource dcterms:publisher ?publisher.
   }
       WHERE {
       ?resource a bibo:Article.
       ?resource dcterms:title ?title.
       ?resource dcterms:abstract ?abstract.
       ?resource dcterms:creator ?creator.
       ?resource dcterms:subject ?subject.
       ?subject rdfs:label ?subjectTitle.
       ?resource dcterms:coverage ?coverage.
       { ?coverage rdfs:label ?coverageTitle. } UNION { ?coverage fao:nameList ?coverageTitle. }
       ?resource dcterms:language ?language.
       ?resource dcterms:identifier ?identifier.
       ?resource rdfs:seeAlso ?document.
       ?resource dcterms:date ?date. 
       ?resource dcterms:publisher ?publisher.
   }
   limit 100
   

FILTERs

By Country Code

    ?resource dcterms:coverage ?coverage.
    ?coverage fao:codeISO2 ?countryCode.
    FILTER(regex(?countryCode, "^AF$"))

By country or region name

    ?resource dcterms:coverage ?coverage.
    { ?coverage rdfs:label ?coverageTitle. } UNION { ?coverage fao:nameList ?coverageTitle. }
    FILTER(regex(?coverageTitle, "^Afghanistan$","i"))

Note that ELDIS and R4D do not use the same region names right now...

/search/organisation/
Searches for organisations

    PREFIX fao: <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/>
    PREFIX dcterms: <http://purl.org/dc/terms/>
    PREFIX bibo:    <http://purl.org/ontology/bibo/>
    SELECT * WHERE {
        ?resource a fao:Organisation.
    }
    limit 10






